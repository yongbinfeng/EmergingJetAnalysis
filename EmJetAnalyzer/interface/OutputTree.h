#ifndef EmergingJetAnalysis_EmJetAnalyzer_OutputTree_h
#define EmergingJetAnalysis_EmJetAnalyzer_OutputTree_h

#include <vector>

#include "TTree.h"

using std::vector;

namespace emjet
{
  class OutputTree {
  public:
    OutputTree() { Init(); }
    void Init();

    void Branch(TTree* tree);

    // Generated by cog
    // Do NOT edit until "end"
    //[[[cog
    //import cog
    //import vars_EmJetAnalyzer as mod; mod.gen_OutputTree()
    //]]]
    int                     run                                    ;
    int                     lumi                                   ;
    unsigned long long      event                                  ;
    int                     bx                                     ;
    int                     nVtx                                   ;
    int                     nGoodVtx                               ;
    int                     nTrueInt                               ;
    float                   met_pt                                 ;
    float                   met_phi                                ;
    float                   met_pt_JetResUp                        ;
    float                   met_pt_JetResDown                      ;
    float                   met_pt_JetEnUp                         ;
    float                   met_pt_JetEnDown                       ;
    float                   met_pt_UnclEnUp                        ;
    float                   met_pt_UnclEnDown                      ;
    float                   metT1_pt                               ;
    float                   metT1_phi                              ;
    float                   metT1_sumEt                            ;
    float                   metT1_pt_JetResUp                      ;
    float                   metT1_pt_JetResDown                    ;
    float                   metT1_pt_JetEnUp                       ;
    float                   metT1_pt_JetEnDown                     ;
    float                   metT1_pt_UnclEnUp                      ;
    float                   metT1_pt_UnclEnDown                    ;
    int                     nTracks                                ;
    float                   alpha_event                            ;
    int                     pdf_id1                                ;
    int                     pdf_id2                                ;
    float                   pdf_x1                                 ;
    float                   pdf_x2                                 ;
    float                   pdf_pdf1                               ;
    float                   pdf_pdf2                               ;
    float                   pdf_scalePDF                           ;
    bool                    HLT_PFHT400                            ;
    bool                    HLT_PFHT475                            ;
    bool                    HLT_PFHT600                            ;
    bool                    HLT_PFHT800                            ;
    bool                    HLT_PFHT900                            ;
    bool                    HLT_HT250                              ;
    bool                    HLT_HT350                              ;
    bool                    HLT_HT400                              ;
    bool                    HLT_HT500                              ;
    bool                    metFilter_HBHENoise                    ;
    bool                    metFilter_HBHENoiseIso                 ;
    bool                    metFilter_EcalDeadCellTriggerPrimitive ;
    bool                    metFilter_goodVertices                 ;
    bool                    metFilter_eeBadSc                      ;
    bool                    metFilter_globalTightHalo2016          ;
    bool                    metFilter_badChargedCandidate          ;
    bool                    metFilter_badPFMuon                    ;
    vector<int>             jet_index                                  ;
    vector<int>             jet_source                                 ;
    vector<float>           jet_ptRaw                                  ;
    vector<float>           jet_eta                                    ;
    vector<float>           jet_phi                                    ;
    vector<float>           jet_pt                                     ;
    vector<float>           jet_ptUp                                   ;
    vector<float>           jet_ptDown                                 ;
    vector<float>           jet_csv                                    ;
    vector<float>           jet_cef                                    ;
    vector<float>           jet_nef                                    ;
    vector<float>           jet_chf                                    ;
    vector<float>           jet_nhf                                    ;
    vector<float>           jet_pef                                    ;
    vector<float>           jet_mef                                    ;
    vector<int>             jet_missHits                               ;
    vector<int>             jet_muonHits                               ;
    vector<float>           jet_alpha                                  ;
    vector<float>           jet_alpha2                                 ;
    vector<float>           jet_alphaMax                               ;
    vector<float>           jet_alphaMax2                              ;
    vector<float>           jet_alpha_gen                              ;
    vector<float>           jet_alphaMax_dz100nm                       ;
    vector<float>           jet_alphaMax_dz200nm                       ;
    vector<float>           jet_alphaMax_dz500nm                       ;
    vector<float>           jet_alphaMax_dz1um                         ;
    vector<float>           jet_alphaMax_dz2um                         ;
    vector<float>           jet_alphaMax_dz5um                         ;
    vector<float>           jet_alphaMax_dz10um                        ;
    vector<float>           jet_alphaMax_dz20um                        ;
    vector<float>           jet_alphaMax_dz50um                        ;
    vector<float>           jet_alphaMax_dz100um                       ;
    vector<float>           jet_alphaMax_dz200um                       ;
    vector<float>           jet_alphaMax_dz500um                       ;
    vector<float>           jet_alphaMax_dz1mm                         ;
    vector<float>           jet_alphaMax_dz2mm                         ;
    vector<float>           jet_alphaMax_dz5mm                         ;
    vector<float>           jet_alphaMax_dz1cm                         ;
    vector<float>           jet_alphaMax_dz2cm                         ;
    vector<float>           jet_alphaMax_dz5cm                         ;
    vector<float>           jet_alphaMax_dz10cm                        ;
    vector<float>           jet_alphaMax_dz20cm                        ;
    vector<float>           jet_alphaMax_dz50cm                        ;
    vector<float>           jet_alphaMax2_dz100nm                      ;
    vector<float>           jet_alphaMax2_dz200nm                      ;
    vector<float>           jet_alphaMax2_dz500nm                      ;
    vector<float>           jet_alphaMax2_dz1um                        ;
    vector<float>           jet_alphaMax2_dz2um                        ;
    vector<float>           jet_alphaMax2_dz5um                        ;
    vector<float>           jet_alphaMax2_dz10um                       ;
    vector<float>           jet_alphaMax2_dz20um                       ;
    vector<float>           jet_alphaMax2_dz50um                       ;
    vector<float>           jet_alphaMax2_dz100um                      ;
    vector<float>           jet_alphaMax2_dz200um                      ;
    vector<float>           jet_alphaMax2_dz500um                      ;
    vector<float>           jet_alphaMax2_dz1mm                        ;
    vector<float>           jet_alphaMax2_dz2mm                        ;
    vector<float>           jet_alphaMax2_dz5mm                        ;
    vector<float>           jet_alphaMax2_dz1cm                        ;
    vector<float>           jet_alphaMax2_dz2cm                        ;
    vector<float>           jet_alphaMax2_dz5cm                        ;
    vector<float>           jet_alphaMax2_dz10cm                       ;
    vector<float>           jet_alphaMax2_dz20cm                       ;
    vector<float>           jet_alphaMax2_dz50cm                       ;
    vector<int>             jet_nDarkPions                             ;
    vector<int>             jet_nDarkGluons                            ;
    vector<float>           jet_minDRDarkPion                          ;
    vector<float>           jet_theta2D                                ;
    vector<vector<int> >    track_index                                  ;
    vector<vector<int> >    track_source                                 ;
    vector<vector<int> >    track_jet_index                              ;
    vector<vector<int> >    track_vertex_index                           ;
    vector<vector<float> >  track_vertex_weight                          ;
    vector<vector<int> >    track_nHitsInFrontOfVert                     ;
    vector<vector<int> >    track_missHitsAfterVert                      ;
    vector<vector<float> >  track_pt                                     ;
    vector<vector<float> >  track_eta                                    ;
    vector<vector<float> >  track_phi                                    ;
    vector<vector<float> >  track_ref_x                                  ;
    vector<vector<float> >  track_ref_y                                  ;
    vector<vector<float> >  track_ref_z                                  ;
    vector<vector<float> >  track_d0Error                                ;
    vector<vector<float> >  track_dzError                                ;
    vector<vector<float> >  track_pca_r                                  ;
    vector<vector<float> >  track_pca_eta                                ;
    vector<vector<float> >  track_pca_phi                                ;
    vector<vector<float> >  track_innerHit_r                             ;
    vector<vector<float> >  track_innerHit_eta                           ;
    vector<vector<float> >  track_innerHit_phi                           ;
    vector<vector<int> >    track_quality                                ;
    vector<vector<int> >    track_algo                                   ;
    vector<vector<int> >    track_originalAlgo                           ;
    vector<vector<int> >    track_nHits                                  ;
    vector<vector<int> >    track_nMissInnerHits                         ;
    vector<vector<int> >    track_nTrkLayers                             ;
    vector<vector<int> >    track_nMissInnerTrkLayers                    ;
    vector<vector<int> >    track_nMissOuterTrkLayers                    ;
    vector<vector<int> >    track_nMissTrkLayers                         ;
    vector<vector<int> >    track_nPxlLayers                             ;
    vector<vector<int> >    track_nMissInnerPxlLayers                    ;
    vector<vector<int> >    track_nMissOuterPxlLayers                    ;
    vector<vector<int> >    track_nMissPxlLayers                         ;
    vector<vector<float> >  track_ipXY                                   ;
    vector<vector<float> >  track_ipZ                                    ;
    vector<vector<float> >  track_ipXYSig                                ;
    vector<vector<float> >  track_ip3D                                   ;
    vector<vector<float> >  track_ip3DSig                                ;
    vector<vector<float> >  track_dRToJetAxis                            ;
    vector<vector<float> >  track_distanceToJet                          ;
    vector<vector<float> >  track_minVertexDz                            ;
    vector<vector<float> >  track_pvWeight                               ;
    vector<vector<float> >  track_minGenDistance                         ;
    vector<vector<int> >    vertex_index                                  ;
    vector<vector<int> >    vertex_source                                 ;
    vector<vector<int> >    vertex_jet_index                              ;
    vector<vector<float> >  vertex_x                                      ;
    vector<vector<float> >  vertex_y                                      ;
    vector<vector<float> >  vertex_z                                      ;
    vector<vector<float> >  vertex_xError                                 ;
    vector<vector<float> >  vertex_yError                                 ;
    vector<vector<float> >  vertex_zError                                 ;
    vector<vector<float> >  vertex_deltaR                                 ;
    vector<vector<float> >  vertex_Lxy                                    ;
    vector<vector<float> >  vertex_mass                                   ;
    vector<vector<float> >  vertex_chi2                                   ;
    vector<vector<float> >  vertex_ndof                                   ;
    vector<vector<float> >  vertex_pt2sum                                 ;
    vector<int>             gp_index                                  ;
    vector<int>             gp_status                                 ;
    vector<int>             gp_pdgId                                  ;
    vector<int>             gp_charge                                 ;
    vector<float>           gp_mass                                   ;
    vector<float>           gp_pt                                     ;
    vector<float>           gp_eta                                    ;
    vector<float>           gp_phi                                    ;
    vector<float>           gp_vx                                     ;
    vector<float>           gp_vy                                     ;
    vector<float>           gp_vz                                     ;
    vector<float>           gp_min2Ddist                              ;
    vector<float>           gp_min2Dsig                               ;
    vector<float>           gp_min3Ddist                              ;
    vector<float>           gp_min3Dsig                               ;
    vector<float>           gp_minDeltaR                              ;
    vector<float>           gp_matched2Ddist                          ;
    vector<float>           gp_matched2Dsig                           ;
    vector<float>           gp_matched3Ddist                          ;
    vector<float>           gp_matched3Dsig                           ;
    vector<float>           gp_matchedDeltaR                          ;
    vector<float>           gp_Lxy                                    ;
    vector<int>             gp_isDark                                 ;
    vector<int>             gp_nDaughters                             ;
    vector<int>             gp_hasSMDaughter                          ;
    vector<int>             gp_hasDarkMother                          ;
    vector<int>             gp_hasDarkPionMother                      ;
    vector<int>             gp_isTrackable                            ;
    vector<int>             pv_index                                  ;
    vector<float>           pv_x                                      ;
    vector<float>           pv_y                                      ;
    vector<float>           pv_z                                      ;
    vector<float>           pv_xError                                 ;
    vector<float>           pv_yError                                 ;
    vector<float>           pv_zError                                 ;
    vector<float>           pv_chi2                                   ;
    vector<float>           pv_ndof                                   ;
    vector<float>           pv_pt2sum                                 ;
    vector<int>             pv_nTracks                                ;
    //[[[end]]]
  };
}

void
emjet::OutputTree::Init() {
  // Generated by cog
  // Do NOT edit until "end"
  //[[[cog
  //import cog
  //import vars_EmJetAnalyzer as mod; mod.gen_Init()
  //]]]
  run                                    = -1;
  lumi                                   = -1;
  event                                  = -1;
  bx                                     = -1;
  nVtx                                   = -1;
  nGoodVtx                               = -1;
  nTrueInt                               = -1;
  met_pt                                 = -1;
  met_phi                                = -1;
  met_pt_JetResUp                        = -1;
  met_pt_JetResDown                      = -1;
  met_pt_JetEnUp                         = -1;
  met_pt_JetEnDown                       = -1;
  met_pt_UnclEnUp                        = -1;
  met_pt_UnclEnDown                      = -1;
  metT1_pt                               = -1;
  metT1_phi                              = -1;
  metT1_sumEt                            = -1;
  metT1_pt_JetResUp                      = -1;
  metT1_pt_JetResDown                    = -1;
  metT1_pt_JetEnUp                       = -1;
  metT1_pt_JetEnDown                     = -1;
  metT1_pt_UnclEnUp                      = -1;
  metT1_pt_UnclEnDown                    = -1;
  nTracks                                = -1;
  alpha_event                            = -1;
  pdf_id1                                = -1;
  pdf_id2                                = -1;
  pdf_x1                                 = -1;
  pdf_x2                                 = -1;
  pdf_pdf1                               = -1;
  pdf_pdf2                               = -1;
  pdf_scalePDF                           = -1;
  HLT_PFHT400                            = -1;
  HLT_PFHT475                            = -1;
  HLT_PFHT600                            = -1;
  HLT_PFHT800                            = -1;
  HLT_PFHT900                            = -1;
  HLT_HT250                              = -1;
  HLT_HT350                              = -1;
  HLT_HT400                              = -1;
  HLT_HT500                              = -1;
  metFilter_HBHENoise                    = -1;
  metFilter_HBHENoiseIso                 = -1;
  metFilter_EcalDeadCellTriggerPrimitive = -1;
  metFilter_goodVertices                 = -1;
  metFilter_eeBadSc                      = -1;
  metFilter_globalTightHalo2016          = -1;
  metFilter_badChargedCandidate          = -1;
  metFilter_badPFMuon                    = -1;
  jet_index                                  .clear();
  jet_source                                 .clear();
  jet_ptRaw                                  .clear();
  jet_eta                                    .clear();
  jet_phi                                    .clear();
  jet_pt                                     .clear();
  jet_ptUp                                   .clear();
  jet_ptDown                                 .clear();
  jet_csv                                    .clear();
  jet_cef                                    .clear();
  jet_nef                                    .clear();
  jet_chf                                    .clear();
  jet_nhf                                    .clear();
  jet_pef                                    .clear();
  jet_mef                                    .clear();
  jet_missHits                               .clear();
  jet_muonHits                               .clear();
  jet_alpha                                  .clear();
  jet_alpha2                                 .clear();
  jet_alphaMax                               .clear();
  jet_alphaMax2                              .clear();
  jet_alpha_gen                              .clear();
  jet_alphaMax_dz100nm                       .clear();
  jet_alphaMax_dz200nm                       .clear();
  jet_alphaMax_dz500nm                       .clear();
  jet_alphaMax_dz1um                         .clear();
  jet_alphaMax_dz2um                         .clear();
  jet_alphaMax_dz5um                         .clear();
  jet_alphaMax_dz10um                        .clear();
  jet_alphaMax_dz20um                        .clear();
  jet_alphaMax_dz50um                        .clear();
  jet_alphaMax_dz100um                       .clear();
  jet_alphaMax_dz200um                       .clear();
  jet_alphaMax_dz500um                       .clear();
  jet_alphaMax_dz1mm                         .clear();
  jet_alphaMax_dz2mm                         .clear();
  jet_alphaMax_dz5mm                         .clear();
  jet_alphaMax_dz1cm                         .clear();
  jet_alphaMax_dz2cm                         .clear();
  jet_alphaMax_dz5cm                         .clear();
  jet_alphaMax_dz10cm                        .clear();
  jet_alphaMax_dz20cm                        .clear();
  jet_alphaMax_dz50cm                        .clear();
  jet_alphaMax2_dz100nm                      .clear();
  jet_alphaMax2_dz200nm                      .clear();
  jet_alphaMax2_dz500nm                      .clear();
  jet_alphaMax2_dz1um                        .clear();
  jet_alphaMax2_dz2um                        .clear();
  jet_alphaMax2_dz5um                        .clear();
  jet_alphaMax2_dz10um                       .clear();
  jet_alphaMax2_dz20um                       .clear();
  jet_alphaMax2_dz50um                       .clear();
  jet_alphaMax2_dz100um                      .clear();
  jet_alphaMax2_dz200um                      .clear();
  jet_alphaMax2_dz500um                      .clear();
  jet_alphaMax2_dz1mm                        .clear();
  jet_alphaMax2_dz2mm                        .clear();
  jet_alphaMax2_dz5mm                        .clear();
  jet_alphaMax2_dz1cm                        .clear();
  jet_alphaMax2_dz2cm                        .clear();
  jet_alphaMax2_dz5cm                        .clear();
  jet_alphaMax2_dz10cm                       .clear();
  jet_alphaMax2_dz20cm                       .clear();
  jet_alphaMax2_dz50cm                       .clear();
  jet_nDarkPions                             .clear();
  jet_nDarkGluons                            .clear();
  jet_minDRDarkPion                          .clear();
  jet_theta2D                                .clear();
  track_index                                  .clear();
  track_source                                 .clear();
  track_jet_index                              .clear();
  track_vertex_index                           .clear();
  track_vertex_weight                          .clear();
  track_nHitsInFrontOfVert                     .clear();
  track_missHitsAfterVert                      .clear();
  track_pt                                     .clear();
  track_eta                                    .clear();
  track_phi                                    .clear();
  track_ref_x                                  .clear();
  track_ref_y                                  .clear();
  track_ref_z                                  .clear();
  track_d0Error                                .clear();
  track_dzError                                .clear();
  track_pca_r                                  .clear();
  track_pca_eta                                .clear();
  track_pca_phi                                .clear();
  track_innerHit_r                             .clear();
  track_innerHit_eta                           .clear();
  track_innerHit_phi                           .clear();
  track_quality                                .clear();
  track_algo                                   .clear();
  track_originalAlgo                           .clear();
  track_nHits                                  .clear();
  track_nMissInnerHits                         .clear();
  track_nTrkLayers                             .clear();
  track_nMissInnerTrkLayers                    .clear();
  track_nMissOuterTrkLayers                    .clear();
  track_nMissTrkLayers                         .clear();
  track_nPxlLayers                             .clear();
  track_nMissInnerPxlLayers                    .clear();
  track_nMissOuterPxlLayers                    .clear();
  track_nMissPxlLayers                         .clear();
  track_ipXY                                   .clear();
  track_ipZ                                    .clear();
  track_ipXYSig                                .clear();
  track_ip3D                                   .clear();
  track_ip3DSig                                .clear();
  track_dRToJetAxis                            .clear();
  track_distanceToJet                          .clear();
  track_minVertexDz                            .clear();
  track_pvWeight                               .clear();
  track_minGenDistance                         .clear();
  vertex_index                                  .clear();
  vertex_source                                 .clear();
  vertex_jet_index                              .clear();
  vertex_x                                      .clear();
  vertex_y                                      .clear();
  vertex_z                                      .clear();
  vertex_xError                                 .clear();
  vertex_yError                                 .clear();
  vertex_zError                                 .clear();
  vertex_deltaR                                 .clear();
  vertex_Lxy                                    .clear();
  vertex_mass                                   .clear();
  vertex_chi2                                   .clear();
  vertex_ndof                                   .clear();
  vertex_pt2sum                                 .clear();
  gp_index                                  .clear();
  gp_status                                 .clear();
  gp_pdgId                                  .clear();
  gp_charge                                 .clear();
  gp_mass                                   .clear();
  gp_pt                                     .clear();
  gp_eta                                    .clear();
  gp_phi                                    .clear();
  gp_vx                                     .clear();
  gp_vy                                     .clear();
  gp_vz                                     .clear();
  gp_min2Ddist                              .clear();
  gp_min2Dsig                               .clear();
  gp_min3Ddist                              .clear();
  gp_min3Dsig                               .clear();
  gp_minDeltaR                              .clear();
  gp_matched2Ddist                          .clear();
  gp_matched2Dsig                           .clear();
  gp_matched3Ddist                          .clear();
  gp_matched3Dsig                           .clear();
  gp_matchedDeltaR                          .clear();
  gp_Lxy                                    .clear();
  gp_isDark                                 .clear();
  gp_nDaughters                             .clear();
  gp_hasSMDaughter                          .clear();
  gp_hasDarkMother                          .clear();
  gp_hasDarkPionMother                      .clear();
  gp_isTrackable                            .clear();
  pv_index                                  .clear();
  pv_x                                      .clear();
  pv_y                                      .clear();
  pv_z                                      .clear();
  pv_xError                                 .clear();
  pv_yError                                 .clear();
  pv_zError                                 .clear();
  pv_chi2                                   .clear();
  pv_ndof                                   .clear();
  pv_pt2sum                                 .clear();
  pv_nTracks                                .clear();
  //[[[end]]]
}

void
emjet::OutputTree::Branch(TTree* tree) {
#define BRANCH(tree, branch) (tree)->Branch(#branch, &branch);
  // Generated by cog
  // Do NOT edit until "end"
  //[[[cog
  //import cog
  //import vars_EmJetAnalyzer as mod; mod.gen_Branch()
  //]]]
  BRANCH(tree, run                                    );
  BRANCH(tree, lumi                                   );
  BRANCH(tree, event                                  );
  BRANCH(tree, bx                                     );
  BRANCH(tree, nVtx                                   );
  BRANCH(tree, nGoodVtx                               );
  BRANCH(tree, nTrueInt                               );
  BRANCH(tree, met_pt                                 );
  BRANCH(tree, met_phi                                );
  BRANCH(tree, met_pt_JetResUp                        );
  BRANCH(tree, met_pt_JetResDown                      );
  BRANCH(tree, met_pt_JetEnUp                         );
  BRANCH(tree, met_pt_JetEnDown                       );
  BRANCH(tree, met_pt_UnclEnUp                        );
  BRANCH(tree, met_pt_UnclEnDown                      );
  BRANCH(tree, metT1_pt                               );
  BRANCH(tree, metT1_phi                              );
  BRANCH(tree, metT1_sumEt                            );
  BRANCH(tree, metT1_pt_JetResUp                      );
  BRANCH(tree, metT1_pt_JetResDown                    );
  BRANCH(tree, metT1_pt_JetEnUp                       );
  BRANCH(tree, metT1_pt_JetEnDown                     );
  BRANCH(tree, metT1_pt_UnclEnUp                      );
  BRANCH(tree, metT1_pt_UnclEnDown                    );
  BRANCH(tree, nTracks                                );
  BRANCH(tree, alpha_event                            );
  BRANCH(tree, pdf_id1                                );
  BRANCH(tree, pdf_id2                                );
  BRANCH(tree, pdf_x1                                 );
  BRANCH(tree, pdf_x2                                 );
  BRANCH(tree, pdf_pdf1                               );
  BRANCH(tree, pdf_pdf2                               );
  BRANCH(tree, pdf_scalePDF                           );
  BRANCH(tree, HLT_PFHT400                            );
  BRANCH(tree, HLT_PFHT475                            );
  BRANCH(tree, HLT_PFHT600                            );
  BRANCH(tree, HLT_PFHT800                            );
  BRANCH(tree, HLT_PFHT900                            );
  BRANCH(tree, HLT_HT250                              );
  BRANCH(tree, HLT_HT350                              );
  BRANCH(tree, HLT_HT400                              );
  BRANCH(tree, HLT_HT500                              );
  BRANCH(tree, metFilter_HBHENoise                    );
  BRANCH(tree, metFilter_HBHENoiseIso                 );
  BRANCH(tree, metFilter_EcalDeadCellTriggerPrimitive );
  BRANCH(tree, metFilter_goodVertices                 );
  BRANCH(tree, metFilter_eeBadSc                      );
  BRANCH(tree, metFilter_globalTightHalo2016          );
  BRANCH(tree, metFilter_badChargedCandidate          );
  BRANCH(tree, metFilter_badPFMuon                    );
  BRANCH(tree, jet_index                                  );
  BRANCH(tree, jet_source                                 );
  BRANCH(tree, jet_ptRaw                                  );
  BRANCH(tree, jet_eta                                    );
  BRANCH(tree, jet_phi                                    );
  BRANCH(tree, jet_pt                                     );
  BRANCH(tree, jet_ptUp                                   );
  BRANCH(tree, jet_ptDown                                 );
  BRANCH(tree, jet_csv                                    );
  BRANCH(tree, jet_cef                                    );
  BRANCH(tree, jet_nef                                    );
  BRANCH(tree, jet_chf                                    );
  BRANCH(tree, jet_nhf                                    );
  BRANCH(tree, jet_pef                                    );
  BRANCH(tree, jet_mef                                    );
  BRANCH(tree, jet_missHits                               );
  BRANCH(tree, jet_muonHits                               );
  BRANCH(tree, jet_alpha                                  );
  BRANCH(tree, jet_alpha2                                 );
  BRANCH(tree, jet_alphaMax                               );
  BRANCH(tree, jet_alphaMax2                              );
  BRANCH(tree, jet_alpha_gen                              );
  BRANCH(tree, jet_alphaMax_dz100nm                       );
  BRANCH(tree, jet_alphaMax_dz200nm                       );
  BRANCH(tree, jet_alphaMax_dz500nm                       );
  BRANCH(tree, jet_alphaMax_dz1um                         );
  BRANCH(tree, jet_alphaMax_dz2um                         );
  BRANCH(tree, jet_alphaMax_dz5um                         );
  BRANCH(tree, jet_alphaMax_dz10um                        );
  BRANCH(tree, jet_alphaMax_dz20um                        );
  BRANCH(tree, jet_alphaMax_dz50um                        );
  BRANCH(tree, jet_alphaMax_dz100um                       );
  BRANCH(tree, jet_alphaMax_dz200um                       );
  BRANCH(tree, jet_alphaMax_dz500um                       );
  BRANCH(tree, jet_alphaMax_dz1mm                         );
  BRANCH(tree, jet_alphaMax_dz2mm                         );
  BRANCH(tree, jet_alphaMax_dz5mm                         );
  BRANCH(tree, jet_alphaMax_dz1cm                         );
  BRANCH(tree, jet_alphaMax_dz2cm                         );
  BRANCH(tree, jet_alphaMax_dz5cm                         );
  BRANCH(tree, jet_alphaMax_dz10cm                        );
  BRANCH(tree, jet_alphaMax_dz20cm                        );
  BRANCH(tree, jet_alphaMax_dz50cm                        );
  BRANCH(tree, jet_alphaMax2_dz100nm                      );
  BRANCH(tree, jet_alphaMax2_dz200nm                      );
  BRANCH(tree, jet_alphaMax2_dz500nm                      );
  BRANCH(tree, jet_alphaMax2_dz1um                        );
  BRANCH(tree, jet_alphaMax2_dz2um                        );
  BRANCH(tree, jet_alphaMax2_dz5um                        );
  BRANCH(tree, jet_alphaMax2_dz10um                       );
  BRANCH(tree, jet_alphaMax2_dz20um                       );
  BRANCH(tree, jet_alphaMax2_dz50um                       );
  BRANCH(tree, jet_alphaMax2_dz100um                      );
  BRANCH(tree, jet_alphaMax2_dz200um                      );
  BRANCH(tree, jet_alphaMax2_dz500um                      );
  BRANCH(tree, jet_alphaMax2_dz1mm                        );
  BRANCH(tree, jet_alphaMax2_dz2mm                        );
  BRANCH(tree, jet_alphaMax2_dz5mm                        );
  BRANCH(tree, jet_alphaMax2_dz1cm                        );
  BRANCH(tree, jet_alphaMax2_dz2cm                        );
  BRANCH(tree, jet_alphaMax2_dz5cm                        );
  BRANCH(tree, jet_alphaMax2_dz10cm                       );
  BRANCH(tree, jet_alphaMax2_dz20cm                       );
  BRANCH(tree, jet_alphaMax2_dz50cm                       );
  BRANCH(tree, jet_nDarkPions                             );
  BRANCH(tree, jet_nDarkGluons                            );
  BRANCH(tree, jet_minDRDarkPion                          );
  BRANCH(tree, jet_theta2D                                );
  BRANCH(tree, track_index                                  );
  BRANCH(tree, track_source                                 );
  BRANCH(tree, track_jet_index                              );
  BRANCH(tree, track_vertex_index                           );
  BRANCH(tree, track_vertex_weight                          );
  BRANCH(tree, track_nHitsInFrontOfVert                     );
  BRANCH(tree, track_missHitsAfterVert                      );
  BRANCH(tree, track_pt                                     );
  BRANCH(tree, track_eta                                    );
  BRANCH(tree, track_phi                                    );
  BRANCH(tree, track_ref_x                                  );
  BRANCH(tree, track_ref_y                                  );
  BRANCH(tree, track_ref_z                                  );
  BRANCH(tree, track_d0Error                                );
  BRANCH(tree, track_dzError                                );
  BRANCH(tree, track_pca_r                                  );
  BRANCH(tree, track_pca_eta                                );
  BRANCH(tree, track_pca_phi                                );
  BRANCH(tree, track_innerHit_r                             );
  BRANCH(tree, track_innerHit_eta                           );
  BRANCH(tree, track_innerHit_phi                           );
  BRANCH(tree, track_quality                                );
  BRANCH(tree, track_algo                                   );
  BRANCH(tree, track_originalAlgo                           );
  BRANCH(tree, track_nHits                                  );
  BRANCH(tree, track_nMissInnerHits                         );
  BRANCH(tree, track_nTrkLayers                             );
  BRANCH(tree, track_nMissInnerTrkLayers                    );
  BRANCH(tree, track_nMissOuterTrkLayers                    );
  BRANCH(tree, track_nMissTrkLayers                         );
  BRANCH(tree, track_nPxlLayers                             );
  BRANCH(tree, track_nMissInnerPxlLayers                    );
  BRANCH(tree, track_nMissOuterPxlLayers                    );
  BRANCH(tree, track_nMissPxlLayers                         );
  BRANCH(tree, track_ipXY                                   );
  BRANCH(tree, track_ipZ                                    );
  BRANCH(tree, track_ipXYSig                                );
  BRANCH(tree, track_ip3D                                   );
  BRANCH(tree, track_ip3DSig                                );
  BRANCH(tree, track_dRToJetAxis                            );
  BRANCH(tree, track_distanceToJet                          );
  BRANCH(tree, track_minVertexDz                            );
  BRANCH(tree, track_pvWeight                               );
  BRANCH(tree, track_minGenDistance                         );
  BRANCH(tree, vertex_index                                  );
  BRANCH(tree, vertex_source                                 );
  BRANCH(tree, vertex_jet_index                              );
  BRANCH(tree, vertex_x                                      );
  BRANCH(tree, vertex_y                                      );
  BRANCH(tree, vertex_z                                      );
  BRANCH(tree, vertex_xError                                 );
  BRANCH(tree, vertex_yError                                 );
  BRANCH(tree, vertex_zError                                 );
  BRANCH(tree, vertex_deltaR                                 );
  BRANCH(tree, vertex_Lxy                                    );
  BRANCH(tree, vertex_mass                                   );
  BRANCH(tree, vertex_chi2                                   );
  BRANCH(tree, vertex_ndof                                   );
  BRANCH(tree, vertex_pt2sum                                 );
  BRANCH(tree, gp_index                                  );
  BRANCH(tree, gp_status                                 );
  BRANCH(tree, gp_pdgId                                  );
  BRANCH(tree, gp_charge                                 );
  BRANCH(tree, gp_mass                                   );
  BRANCH(tree, gp_pt                                     );
  BRANCH(tree, gp_eta                                    );
  BRANCH(tree, gp_phi                                    );
  BRANCH(tree, gp_vx                                     );
  BRANCH(tree, gp_vy                                     );
  BRANCH(tree, gp_vz                                     );
  BRANCH(tree, gp_min2Ddist                              );
  BRANCH(tree, gp_min2Dsig                               );
  BRANCH(tree, gp_min3Ddist                              );
  BRANCH(tree, gp_min3Dsig                               );
  BRANCH(tree, gp_minDeltaR                              );
  BRANCH(tree, gp_matched2Ddist                          );
  BRANCH(tree, gp_matched2Dsig                           );
  BRANCH(tree, gp_matched3Ddist                          );
  BRANCH(tree, gp_matched3Dsig                           );
  BRANCH(tree, gp_matchedDeltaR                          );
  BRANCH(tree, gp_Lxy                                    );
  BRANCH(tree, gp_isDark                                 );
  BRANCH(tree, gp_nDaughters                             );
  BRANCH(tree, gp_hasSMDaughter                          );
  BRANCH(tree, gp_hasDarkMother                          );
  BRANCH(tree, gp_hasDarkPionMother                      );
  BRANCH(tree, gp_isTrackable                            );
  BRANCH(tree, pv_index                                  );
  BRANCH(tree, pv_x                                      );
  BRANCH(tree, pv_y                                      );
  BRANCH(tree, pv_z                                      );
  BRANCH(tree, pv_xError                                 );
  BRANCH(tree, pv_yError                                 );
  BRANCH(tree, pv_zError                                 );
  BRANCH(tree, pv_chi2                                   );
  BRANCH(tree, pv_ndof                                   );
  BRANCH(tree, pv_pt2sum                                 );
  BRANCH(tree, pv_nTracks                                );
  //[[[end]]]
}

// Insert new empty element in nested vector and returns pointer to the added element
template <typename T>
vector<T>&
make_new_element (vector< vector<T> > & vec) {
  vec.push_back( vector<T>() );
  return vec.back();
}


#endif
